alertmanager:
  ## Alertmanager configuration directives
  ## Ref: https://prometheus.io/docs/alerting/configuration/
  ##
  config:
    global:
      resolve_timeout: 5m

    receivers:
      - name: default-receiver
        slack_configs:
          - channel: '#'
            send_resolved: true
            api_url: ""

    route:
      group_by: ['job']
      group_interval: 5m
      group_wait: 30s
      receiver: default-receiver
      repeat_interval: 3h

  ingress:
    ## If true, Alertmanager Ingress will be created
    enabled: true

    ## ingress host
    fqdn: ""

  ## Resource limits & requests
  ## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # requests:
    #   memory: 400Mi

  service:
    ## Service type
    type: ClusterIP

  ## Alertmanager StorageSpec for persistent data
  ## Ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/prometheus.md#storagespec
  ##
  storageSpec:
    class: ceph-rbd
    resources:
      requests:
        storage: 2Gi

prometheus:
  ingress:
    enabled: true

    ## ingress host
    fqdn: ""

  ## Number of Prometheus replicas desired
  ##
  replicaCount: 1

  ## Resource limits & requests
  ## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # requests:
    #   memory: 400Mi

  ## How long to retain metrics
  ##
  retention: 24h

  service:
    type: ClusterIP

  ## Prometheus StorageSpec for persistent data
  ## Ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/prometheus.md#storagespec
  ##
  storageSpec:
    class: ceph-rbd
    resources:
      requests:
        storage: 100Gi

grafana:
  adminUser: "admin"
  adminPassword: "admin"

  service:
    type: ClusterIP

  storageSpec:
    class: ceph-rbd
    accessMode: ReadWriteOnce
    resources:
      requests:
        storage: 2Gi

  resources: {}
    # requests:
    #   memory: 400Mi

  ingress:
    enabled: true

    fqdn: ""
